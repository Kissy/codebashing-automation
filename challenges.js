var MAPPING = {
    'What an attacker could gain with a successful SQLi attack?': 'All of the above',
    'How would you protect yourself from an SQLi attack': 'Use prepared statements or parameterized queries to add values to a hardcoded query',
    'What functionality of a website cannot be targeted by Stored (Persistent) XSS attacks': 'Redirect after login',
    'The user is redirected to some page after login. Redirection URL is specified in the "url" parameter (e.g. https://codebashing.com/login?url=http://checkmarx.com) that is defined on the client side. How should the redirect functionality be implemented to avoid being used in phishing attacks': 'Instead of the full URL use the token that is mapped to the predefined URL. Or at least check the URL against a whitelist',
    'What control helps to prevent CSRF': 'All of the above',
    'How to protect from directory traversal': 'Canonicalize path and check if it is valid before starting manipulations with files in the path',
    'What an attacker could gain with a successful SQLi attack': 'All of the above',
    'Which algorithm is not vulnerable, and should be used for encryption in TLS connection': 'AES',
    'What is the weakness Cross-Site-Scripting exploits': 'User input is not encoded and is rendered within a dynamic context',
    'What application functionality can be used for user enumeration': 'All of the above',
    'What is an example of the vertical privilege escalation in a web application': 'Gaining access to the administrative interface of a web application, using a user account that does not have any administrative privileges',
    'How may hacker exploit insufficiently random value used in the application': 'All of the above',
    'An application runs an OS command using the argument specified in the URL. What is the most secure approach to prevent command injection in the application': 'Avoid direct usage of user input in the command, e.g. map every user input to a predefined OS command argument or, if the user input in the command is absolutely necessary, set a whitelist of allowed characters and check the argument against this list',
    'What is the explicit reason deserialization of untrusted data being so dangerous': 'It may allow attackers to create arbitrary objects of their choice by providing unexpected or unintended objects of various types',
    'How can a maintenance hook that resides in production environment impact security': 'All of the above',
    'What may an attacker do if he successfully exploits a command injection vulnerability': 'All of the above',
    'What is the necessary condition for Reflected XSS attack': 'User input is returned in HTTP response to the browser, e.g. in an error or a search result',
    'What may the usage of an outdated vulnerable application component lead to': 'All of the above',
    'What are the consequences of insufficiently random values usage': 'Session ID could be predicted and an attacker could access the application as another user',
    'What is the logical root cause of Cross-Site Request Forgery': 'The application validates a request originated from its intended user, but does not validate a user\'s intent to submit such a request, resulting in users making requests on behalf of their attackers',
    'How can an attacker find a user management interface': 'All of the above',
    'What should you do to protect from XXE injection': 'Prohibit definition of an external document type',
    'How to prevent leakage of sensitive information?': 'Avoid storing sensitive information on local / external storage if such option is possible',
    'How to properly store sensitive information locally, if one must store such information?': 'Use KeyStore and Keychain for Android and iOS respectively',
    'What kind of data fields shouldn\'t be autocompleted?': 'All of the above',
    'Why do injections occur?': 'User input inserted into queries, commands, or other execution context on the device is not validated beforehand',
    'How could an unprotected screenshot affect the user?': 'Sensitive personal information, such as credit card number, social security number, or login credentials, could leak',
    'How could excessive logging affect users?': 'Users\' privacy could be violated by sensitive information leaking',
    'What is forceful browsing?': 'Manipulating URL in order to achieve horizontal or vertical privilege escalation',
    'What should be done to prevent caching of user login and password?': 'All of the above',
    'Why is forceful browsing attack possible?': 'All of the above',
    'Some application has login and password forms for authenticating users. The application returns "The user doesn\'t exist" in case the username doesn\'t exist and "Wrong password" if the username exists and the password is wrong. Is the application vulnerable?': 'Yes! Verbose errors allow the attacker to enumerate usernames and run further attacks on existing users',
    'Which of the following is NOT an example of Horizontal Privilege Escalation?': 'An authenticated attacker observes that they have a cookie set, called "role". By setting the value of "role" to "admin", an attacker is able to browse to a management page that contains administrator functionality',
    'How to prevent or reduce the impact of Reflected XSS?': 'All of the above',
    'How could vertical privilege escalation be performed?': 'An attacker has regular user rights at the beginning, but then tampers an application and gets admin rights',
    //'How could vertical privilege escalation be performed?': 'An attacker gets administrator privileges exploiting application\'s flawed logic or access control',
    'Why does XXE vulnerability occur?': 'XML parser parses XML tags that define external entities and doesn\'t check that XML doesn\'t contain malicious data',
    'How does an attacker exploit Stored XSS?': 'Attacker sends a malicious script to a server using a vulnerable functionality (e.g. comments), and the script is successfully saved to the server. Then this script is served to users and executed in their browsers',
    'Which hashing algorithm doesn\'t have known collision attacks?': 'SHA2',
    'How can integer overflows be avoided?': 'Value checks',
    'Why do integers overflow when incremented or underflow when decremented?': 'The integer representation of numbers that are larger than maximal integer, or smaller than minimal integer, are cyclical â€“ if the value of an integer exceeds these boundaries, the counter simply resets to its opposing value. An incremented maximal value will turn into the minimal value, and vice versa',
    'What may an attacker achieve using Reflected XSS?': 'The attacker can run malicious javascript in the user\'s browser',
    'How can an attacker use the forgotten debug functionality on production environment?': 'All of the above',
    'How can the comments left during debugging impact security?': 'All of the above',
    'How to prevent Stored XSS?': 'Sanitize the user input using a whitelist before saving it to the database to prevent multiple kinds of attacks including XSS. Also sanitize it after it\'s retrieved from the database',
    'When does NULL pointer dereference happen?': 'When a program tries to write or read data from memory with the NULL pointer',
    'What is a potential impact of an off-by-one overflow with strings?': 'An attacker can cause a null byte to overwrite one byte beyond the affected buffer. This could lead to a crash and, on some architectures and conditions, taking over flow by overwriting parts of a return address in the stack',
    'What is an example of an off-by-one error in a loop?': 'When defining a For loop, initializing the iterator I=0, with the stop condition being I<=N, resulting in N+1 iterations instead of the intended N iterations',
    'How can an Off-By-One overflow occur when using strings?': 'When the target buffer\'s size is equal to the length of the string, as length does not account for the terminating null byte',
    'Why does a format string attack occur?': 'An attacker may provide their own malicious format string',
    'What are possible consequences of an integer overflow?': 'All of the above',
    'What is the potential impact of a format string attack?': 'All of the above',
    //'Which of the following cases describes a heap overflow?': 'A large value is saved into a global variable, exceeding the global variable\'s size and overwriting other areas of heap memory',
    'How can format string attacks be avoided?': 'Never pass an untrusted string as a format string',
    'Which of the following is a possible effect of a heap overflow?': 'All of the above',
    'Which of the following is a possible effect of a stack overflow?': 'All of the above',
    'How does a stack overflow occur?': 'A large value is written into a small buffer on the stack, causing the value to exceed the buffer allocated and overwrite unexpected sections of memory',
    'Which of the following describes a TOCTOU (Time of Check, Time of Use) race condition?': 'A check is made to ensure validity, permission, integrity or availability of a certain resource, but by the time this resource is used, it may have been altered by another logical process in a way that invalidates the check',
    'What is the major difference between a heap overflow and a stack overflow?': 'A stack overflow occurs in the stack area, which contains static memory allocation, and the heap contains dynamic memory allocation',
    'Which of these options is a valid mitigation for stack overflow?': 'Perform boundary checks to ensure values would fit inside their allotted buffers',
    'An attacker enumerated users and now he has a big list of usernames. What could be the consequences?': 'All of the above',
    'What is the logical root cause of Cross-Site Request Forgery?': 'The application validates a request originated from its intended user, but does not validate a user\'s intent to submit such a request, resulting in users making requests on behalf of their attackers',
    'If CSRF token is a part of the URL, where could it be disclosed?': 'All of the above',
    'What are the dynamic contexts that could be prone to XSS?': 'HTML, JavaScript, CSS',
    'How would you protect yourself from an XSS attack?': 'Encoding of output',
    'What are the prerequisites of exploiting CSRF, by conducting a CSRF attack?': 'All of the above',
    'What is the weakness Cross-Site-Scripting exploits?': 'User input is not encoded and is rendered within a dynamic context',
    'Which of these following suggestions does NOT prevent Horizontal Privilege Escalation?': 'Add two-factor authentication to ensure users are strongly authenticated with the application',
    'Why does an SQL injection occur?': 'SQL query is created, where user input manipulates SQL syntax',
    'What is the right strategy to prevent session fixation vulnerability?': 'Issue a new session ID after a user authenticates',
    'What should be done to minimize the amount of vulnerable third-party components in an application?': 'All of the above',
    'What is a good way to mitigate deserialization-related vulnerabilities?': 'Restrict deserialization to a set of classes whose deserialization is safe',
    'The application allows the user to choose language settings by specifying a language file in the URL (e.g. http://example.com/languages?language=english.txt). It returns the content of the specified file from /var/www/languages/ directory to the user\'s browser to make sure the user wants this language settings. Choose the right payload that may be inserted into the "Language" parameter to steal the password file stored in /home/superadmin/pwd.txt.': 'language=../../../../../../../../../../home/superadmin/pwd.txt',
    'Which protocol should be used for secure SSL/TLS connection?': 'TLS1.2 and higher',
    'Which of the options best describes a Horizontal Privilege Escalation attack?': 'An attacker is able to obtain similar privileges in an environment to the ones they currently have, but in a scope or domain that belongs to other users',
    'Which algorithm is not vulnerable, and should be used for encryption in TLS connection?': 'AES',
    'If the session token is stored in the URL (e.g. https://example.com/profile?session=7sdfkl82qtklqa81o9nar0) where can it be leaked?': 'All of the above',
    'What application functionality can be used for user enumeration?': 'All of the above',
    'The authentication credentials are stored in the URL(e.g. http://codebashing.com/login?username=admin&password=admin). Where can they be leaked from?': 'All of the above',
    'What is an example of the vertical privilege escalation in a web application?': 'Gaining access to the administrative interface of a web application, using a user account that does not have any administrative privileges',
    'What control helps to prevent CSRF?': 'All of the above',
    'How can an attacker find a user management interface?': 'All of the above',
    'What HTTP method should be used to change the state of the application?': 'POST',
    'How to protect from directory traversal?': 'Canonicalize path and check if it is valid before starting manipulations with files in the path',
    'How can a management interface be implemented in order to avoid its exposure?': 'Check permissions to access the user management functionality with every request to the backend, and hide the interface on the frontend if the user doesn\'t have permissions. If possible, make it accessible only via VPN or from the company\'s internal network',
    'What is the explicit reason deserialization of untrusted data being so dangerous?': 'It may allow attackers to create arbitrary objects of their choice by providing unexpected or unintended objects of various types',
    'What are the consequences of insufficiently random values usage?': 'Session ID could be predicted and an attacker could access the application as another user',
    'What may an attacker do if he successfully exploits a command injection vulnerability?': 'All of the above',
    'How would you protect yourself from an SQLi attack?': 'Use prepared statements or parameterized queries to add values to a hardcoded query',
    'The user is redirected to some page after login. Redirection URL is specified in the "url" parameter (e.g. https://codebashing.com/login?url=http://checkmarx.com) that is defined on the client side. How should the redirect functionality be implemented to avoid being used in phishing attacks?': 'Instead of the full URL use the token that is mapped to the predefined URL. Or at least check the URL against a whitelist',
    'An application runs an OS command using the argument specified in the URL. What is the most secure approach to prevent command injection in the application?': 'Avoid direct usage of user input in the command, e.g. map every user input to a predefined OS command argument or, if the user input in the command is absolutely necessary, set a whitelist of allowed characters and check the argument against this list',
    'Which of the following is a possible outcome of an injection attack?': 'All of the above',
    'When is data stored insecurely in local storage?': 'All of the above',
    'Why is caching user credentials in a mobile application dangerous? Caching means saving the credentials and showing prefilled credentials in the application login form.': 'If a phone with credentials cached in an application is stolen, then a thief will be able to log into the application without knowing the password',
    'How to protect yourself against an injection attack?': 'Validate all user input to verify that it does not contain characters that might break the syntax and run unintended malicious code',
    'How are excessive logging issues prevented?': 'Filter personally identifiable information and sensitive information prior to logging',
    'What can an attacker find while performing forceful browsing, given that authorization works improperly?': 'All of the above',
    'Why are unprotected background screenshots taken?': 'The operating system takes a screenshot when the application moves to the background, in order to provide a visual preview when switching between applications',
    'How are excessive logging issues caused?': 'The application logs possibly sensitive data, including personally identifiable information, passwords, credit card numbers, etc., which may be later retrieved by a third party',
    'How can an unprotected screenshot be prevented?': 'Blur the view or overlay an image on top of the view with sensitive information',
    'What is a secure way to store sensitive data on a mobile device?': 'Use iOS APIs secure storage mechanisms (like Data Protection API or KeyChain API)',
    //'What is a secure way to store sensitive data on a mobile device?': 'Use Android APIs secure storage mechanisms (like Keystore API or KeyChain API)',
    'Where shouldn\'t sensitive information be stored on a mobile device?': 'All of the above',
    'What can happen to sensitive data saved in a Plist file on a mobile device?': 'All of the above',
    'How can the usage of Autocomplete functionality in mobile applications impact the security if an attacker gets physical access to the device?': 'All of the above',
    'How would an attacker exploit session fixation vulnerability?': 'An attacker creates a session in the application, tricks the user into opening the application with attacker\'s session ID, waits until the user authenticates using attacker\'s session ID, and accesses the application as this user',
    'When does session fixation vulnerability occur?': 'When the application uses the same session token before and after user authentication',
    'What is a secure way to send credentials (login and password) from client to server in an HTTP request?': 'HTTP POST request with login and password as parameters over a channel encrypted using TLS. Login and password should be sent in plaintext',
    'Why does sending a session identifier in the URL pose a security risk?': 'The URL is saved in multiple locations on its way, thus the session ID can be disclosed',
    'Which of the following can a race condition affect?': 'All of the above',
    'What may happen as a result of a NULL dereference?': 'Code execution',
    'How can a race condition be avoided?': 'Atomic operations â€“ a check and a use should be parts of the same single operation. Block other processes from intervening in between the check and the use',
    'What should be done to properly erase sensitive information from memory?': 'Explicitly write 0 to the location in memory where sensitive data was saved using memset_s()',
    'Why sensitive data persists in memory after it was used and is not needed anymore?': 'Data is not erased explicitly, only memory is deallocated',
    'What can happen if sensitive data is not properly erased from memory?': 'If a memory dump occurs, for example, during a system crash, the data may be saved as a part of the memory dump',
    'What functionality of a website cannot be targeted by Stored (Persistent) XSS attacks?': 'Redirect after login',
    'What may the usage of an outdated vulnerable application component lead to?': 'All of the above',
    'Why is command injection possible in a web application?': 'User input is inserted into the OS command that application runs on the server',
    'A Clickjacking attack is possible because...': 'A vulnerable site allows malicious sites to open it in an iframe or using equivalent tags',
    'Where should the session identifier be sent in an HTTP request?': 'GET or POST request cookie',
    'Which content types are vulnerable to deserialization?': 'Deserialization does not depend on medium',
    'Which HTTP header may restrict the list of domains that can open a certain website in an iframe?': 'X-Frame-Options',
    'Why vulnerabilities in third-party software components persist?': 'Update of third-party components used in applications usually requires a big amount of testing and is often considered as an unimportant technical debt',
    'What could happen if a user management interface doesn\'t have proper authentication and is simply hidden?': 'All of the above',
    'How does an additional unique token in the request body help the server mitigate CSRF?': 'By ensuring that the request\'s body also has an element the attacker cannot possibly guess, as an additional way of ensuring a request came from the user who intended to make it',
    'Which of the following session token creation algorithms is secure?': 'A random value generated using a secure random number generator',
    'Why does the use of authentication credentials in the URL pose a security risk?': 'The URL is saved in multiple locations, thus leaving credentials  exposed',
    'What may an attacker do if redirection URL is defined on the client side as an URL parameter (e.g. http://example.com/redirect?url=https://redirect.example.com)?': 'Send the user a link with a malicious site in the URL parameter. The user opens a legitimate site that redirects him to the malicious site where the attacker deployed a phishing page',
    'Which of the following is an example of exploiting an XXE vulnerability?': 'An attacker sends an XML containing DOCTYPE, ELEMENT and ENTITY tags that describe an arbitrary document type. ENTITY tag points at some external location where sensitive information is stored. Then the attacker receives the results of XML parsing including the file content',
    'What can happen to sensitive data saved in a plain text file on a mobile device?': 'All of the above',
    'Which of the following cases describes a heap overflow?': 'A large value is written into a small buffer allocated on runtime using malloc, causing the value to exceed the buffer allocated and overwrite unexpected sections of memory',
    'What is the major difference between a heap overflow and a stack buffer overflow?': 'As stack buffer overflow occurs in the stack area, which contains static memory allocation, and the heap contains dynamic memory allocation',
    'What can an attacker gain while exploiting a null pointer dereference vulnerability?': 'Code execution',
    'How can the Clickjacking vulnerability be exploited when the user is lured to a malicious page?': 'All of the above',
    'What is the necessary condition for Reflected XSS attack?': 'User input is returned in HTTP response to the browser, e.g. in an error or a search result',
    'How may hacker exploit insufficiently random value used in the application?': 'All of the above',
    'What should you do to protect from XXE processing?': 'Prohibit definition of an external document type',
    'What may an attacker steal exploiting directory traversal vulnerability?': 'All of the above',
    'How can a maintenance hook that resides in production environment impact security?': 'All of the above',

};

function answer() {
    var question = document.querySelector('.quest-title--29DWf');
    if (!question) {
        return;
    }

    var rightAnswer = MAPPING[question.textContent.trim()];
    if (rightAnswer) {
        var answers = document.querySelectorAll('.answer-content--awrf8');
        for (var i = 0; i < answers.length; i++) {
            var currentAnswer = answers[i].textContent.trim();
            if (rightAnswer === currentAnswer) {
                answers[i].click();
                document.querySelector('.answerSelected--2xekb').click();
                break;
            }
        }
    } else {
        console.log("QUESTION NOT FOUND");
    }
}

window.setInterval(answer, 2000);
